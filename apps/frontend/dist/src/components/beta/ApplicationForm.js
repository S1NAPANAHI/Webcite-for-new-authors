import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useNavigate } from 'react-router-dom';
const ApplicationForm = () => {
    const navigate = useNavigate();
    // Placeholder data for dropdowns - in a real app, this would come from a config or API
    const countries = ['United States', 'Canada', 'United Kingdom', 'Australia', 'Other'];
    const timezones = ['PST', 'MST', 'CST', 'EST', 'GMT', 'Other'];
    const genres = ['Fantasy', 'Science Fiction', 'Mystery', 'Thriller', 'Romance', 'Horror'];
    const strengths = ['Plot', 'Pacing', 'Character', 'Continuity', 'Clarity', 'Worldbuilding'];
    const renderField = (label, input, required = false) => (_jsxs("div", { className: "mb-4", children: [_jsxs("label", { className: "block text-gray-700 text-sm font-bold mb-2", children: [label, " ", required && _jsx("span", { className: "text-red-500", children: "*" })] }), input] }));
    const handleSubmit = (e) => {
        e.preventDefault();
        // Simulate form submission
        console.log('Beta application submitted!');
        localStorage.setItem('betaApplicationStatus', 'pending');
        navigate('/beta/status'); // Redirect to application status page
    };
    return (_jsxs("form", { onSubmit: handleSubmit, className: "bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4", children: [_jsx("h2", { className: "text-2xl font-bold mb-6 border-b pb-2", children: "Basics" }), renderField('Full Name', _jsx("input", { className: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700", type: "text" }), true), renderField('Email', _jsx("input", { className: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700", type: "email" }), true), renderField('Country', _jsxs("select", { className: "shadow border rounded w-full py-2 px-3 text-gray-700", children: [_jsx("option", { children: "Select a country" }), countries.map(c => _jsx("option", { children: c }, c))] }), true), renderField('Timezone', _jsxs("select", { className: "shadow border rounded w-full py-2 px-3 text-gray-700", children: [_jsx("option", { children: "Select a timezone" }), timezones.map(t => _jsx("option", { children: t }, t))] }), true), renderField('Reading Speed (per week)', _jsxs("select", { className: "shadow border rounded w-full py-2 px-3 text-gray-700", children: [_jsx("option", { children: "Select reading speed" }), _jsx("option", { children: "<2h/wk" }), _jsx("option", { children: "2-4h/wk" }), _jsx("option", { children: "5-7h/wk" }), _jsx("option", { children: "8h+" })] }), true), _jsx("h2", { className: "text-2xl font-bold mb-6 mt-8 border-b pb-2", children: "Experience" }), renderField('Past Beta Reading Experience (optional)', _jsx("textarea", { className: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700", rows: 4 })), renderField('Favorite Genres', _jsx("div", { className: "grid grid-cols-2 gap-2", children: genres.map(g => _jsxs("label", { className: "flex items-center", children: [_jsx("input", { type: "checkbox", className: "mr-2" }), g] }, g)) }), true), renderField('Your Strengths as a Reader', _jsx("div", { className: "grid grid-cols-2 gap-2", children: strengths.map(s => _jsxs("label", { className: "flex items-center", children: [_jsx("input", { type: "checkbox", className: "mr-2" }), s] }, s)) }), true), _jsx("h2", { className: "text-2xl font-bold mb-6 mt-8 border-b pb-2", children: "Availability & Devices" }), renderField('How many hours can you commit per week?', _jsxs("select", { className: "shadow border rounded w-full py-2 px-3 text-gray-700", children: [_jsx("option", { children: "Select hours" }), _jsx("option", { children: "2-3h" }), _jsx("option", { children: "4-6h" }), _jsx("option", { children: "7-10h" }), _jsx("option", { children: "10h+" })] }), true), renderField('Preferred Ebook Formats', _jsxs("div", { className: "flex space-x-4", children: [_jsxs("label", { children: [_jsx("input", { type: "checkbox", className: "mr-2" }), "EPUB"] }), _jsxs("label", { children: [_jsx("input", { type: "checkbox", className: "mr-2" }), "PDF"] })] }), true), renderField('Primary Reading Device (optional)', _jsxs("select", { className: "shadow border rounded w-full py-2 px-3 text-gray-700", children: [_jsx("option", { children: "Select a device" }), _jsx("option", { children: "eReader" }), _jsx("option", { children: "Tablet" }), _jsx("option", { children: "Phone" }), _jsx("option", { children: "Desktop" })] })), _jsx("h2", { className: "text-2xl font-bold mb-6 mt-8 border-b pb-2", children: "Sample Feedback Task" }), _jsxs("div", { className: "bg-gray-100 p-4 rounded mb-4", children: [_jsx("p", { className: "font-bold mb-2", children: "Excerpt:" }), _jsx("p", { className: "italic", children: "The obsidian gates groaned, not with the weight of stone, but with the sorrow of ages. Kaelen watched from the shadows, his breath a ghost in the frigid air, as the sigil on the archway pulsed with a faint, sickly green light. It was a warning. It was an invitation." })] }), renderField('What worked best in this excerpt and why? (100-300 words)', _jsx("textarea", { className: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700", rows: 5 }), true), renderField('What, if anything, was confusing or unclear? How could it be improved? (100-300 words)', _jsx("textarea", { className: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700", rows: 5 }), true), renderField('Provide one actionable suggestion to enhance this scene. (60-200 words)', _jsx("textarea", { className: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700", rows: 3 }), true), _jsx("h2", { className: "text-2xl font-bold mb-6 mt-8 border-b pb-2", children: "Consents" }), renderField('', _jsxs("label", { className: "flex items-center", children: [_jsx("input", { type: "checkbox", className: "mr-2" }), " I agree to receive watermarked files and understand they are for my personal use only."] }), true), renderField('', _jsxs("label", { className: "flex items-center", children: [_jsx("input", { type: "checkbox", className: "mr-2" }), " I agree to sign a Non-Disclosure Agreement (NDA) if I am selected for the program."] }), true), renderField('', _jsxs("label", { className: "flex items-center", children: [_jsx("input", { type: "checkbox", className: "mr-2" }), " (Optional) I agree to share anonymized device logs to help with quality assurance."] }), false), _jsx("div", { className: "flex items-center justify-center mt-8", children: _jsx("button", { className: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline", type: "submit", children: "Submit Application" }) })] }));
};
export default ApplicationForm;
//# sourceMappingURL=ApplicationForm.js.map