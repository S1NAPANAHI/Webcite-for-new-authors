import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Plus, Edit3, Trash2, Eye, Search } from 'lucide-react';
export const ContentTable = ({ contentType, items, title, columns, createActionLabel, onEdit, onDelete, onCreateNew, }) => {
    const [searchTerm, setSearchTerm] = useState('');
    const [filterStatus, setFilterStatus] = useState('all');
    const filteredItems = items.filter(item => {
        const matchesSearch = Object.values(item).some(value => value && value.toString().toLowerCase().includes(searchTerm.toLowerCase()));
        const matchesFilter = filterStatus === 'all' || item.status === filterStatus;
        return matchesSearch && matchesFilter;
    });
    return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("h1", { className: "text-3xl font-bold text-gray-900", children: title }), _jsxs("button", { onClick: onCreateNew, className: "flex items-center gap-2 bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors", children: [_jsx(Plus, { className: "w-4 h-4" }), createActionLabel] })] }), _jsx("div", { className: "bg-white p-4 rounded-lg shadow-sm border", children: _jsxs("div", { className: "flex gap-4", children: [_jsx("div", { className: "flex-1", children: _jsxs("div", { className: "relative", children: [_jsx(Search, { className: "w-4 h-4 absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" }), _jsx("input", { type: "text", value: searchTerm, onChange: (e) => setSearchTerm(e.target.value), placeholder: `Search ${title.toLowerCase()}...`, className: "w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" })] }) }), _jsxs("select", { value: filterStatus, onChange: (e) => setFilterStatus(e.target.value), className: "px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500", children: [_jsx("option", { value: "all", children: "All Status" }), _jsx("option", { value: "published", children: "Published" }), _jsx("option", { value: "draft", children: "Draft" }), _jsx("option", { value: "active", children: "Active" }), _jsx("option", { value: "inactive", children: "Inactive" }), _jsx("option", { value: "pending", children: "Pending" })] })] }) }), _jsx("div", { className: "bg-white rounded-lg shadow-sm border overflow-hidden", children: _jsxs("table", { className: "w-full", children: [_jsx("thead", { className: "bg-gray-50 border-b border-gray-200", children: _jsxs("tr", { children: [columns.map((column) => (_jsx("th", { className: "text-left py-3 px-6 text-sm font-medium text-gray-900", children: column.label }, column.key))), _jsx("th", { className: "text-right py-3 px-6 text-sm font-medium text-gray-900", children: "Actions" })] }) }), _jsx("tbody", { children: filteredItems.map((item) => (_jsxs("tr", { className: "border-b border-gray-200 hover:bg-gray-50", children: [columns.map((column) => (_jsx("td", { className: "py-4 px-6", children: column.render ? column.render(item) : (_jsx("div", { className: column.key === columns[0].key ? "font-medium text-gray-900" : "text-sm text-gray-500", children: item[column.key] })) }, column.key))), _jsx("td", { className: "py-4 px-6", children: _jsxs("div", { className: "flex items-center justify-end gap-2", children: [_jsx("button", { onClick: () => onEdit(item), className: "p-1 text-gray-500 hover:text-blue-600", children: _jsx(Edit3, { className: "w-4 h-4" }) }), _jsx("button", { className: "p-1 text-gray-500 hover:text-green-600", children: _jsx(Eye, { className: "w-4 h-4" }) }), _jsx("button", { onClick: () => onDelete(item.id), className: "p-1 text-gray-500 hover:text-red-600", children: _jsx(Trash2, { className: "w-4 h-4" }) })] }) })] }, item.id))) })] }) })] }));
};
//# sourceMappingURL=ContentTable.js.map