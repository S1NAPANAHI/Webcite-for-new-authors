import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState, useEffect, useRef } from 'react';
// Removed: import styles from '../styles/ArtistCollaboration.module.css';
const ArtistCollaborationPage = () => {
    const formRef = useRef(null);
    const fileInputRefs = useRef({});
    const textAreaRefs = useRef({});
    const [formData, setFormData] = useState({
        fullName: '',
        preferredName: '',
        email: '',
        timezone: '',
        country: '',
        portfolioLinks: '',
        specialties: [],
        tools: [],
        availability: '',
        startDate: '',
        commitment: '',
        bestPieces: '',
        makingOfNotes: '',
        visualInfluences: '',
        worldVisualization: '',
        feedbackProcess: '',
        colorGrading: '',
        references: '',
        turnaround: '',
        revisionPolicy: '',
        revenueShareWilling: '',
        preferredTrack: '',
        taxConstraints: '',
        projectPortal: false,
        ndaAcceptance: false,
        originalityConfirm: false,
        rightsConfirm: false,
        signature: '',
        signatureDate: new Date().toISOString().split('T')[0],
    });
    const handleInputChange = (e) => {
        const { name, value, type, checked } = e.target;
        if (type === 'checkbox') {
            setFormData(prev => {
                const currentValues = prev[name] || [];
                if (checked) {
                    return { ...prev, [name]: [...currentValues, value] };
                }
                else {
                    return { ...prev, [name]: currentValues.filter((item) => item !== value) };
                }
            });
        }
        else if (type === 'radio') {
            setFormData(prev => ({ ...prev, [name]: value }));
        }
        else {
            setFormData(prev => ({ ...prev, [name]: value }));
        }
    };
    const handleFileChange = (e, inputName) => {
        const files = e.target.files;
        setFormData(prev => ({ ...prev, [inputName]: files }));
        updateFileUploadDisplay(e.target, inputName);
    };
    const updateFileUploadDisplay = (inputElement, inputName) => {
        const container = inputElement.closest(`.file-upload`); // Changed from styles['file-upload']
        if (!container)
            return;
        const fileCount = inputElement.files ? inputElement.files.length : 0;
        const textElement = container.querySelector('p');
        if (textElement) {
            if (fileCount > 0) {
                textElement.innerHTML = `${fileCount} file(s) selected<br><small>Ready to upload</small>`;
                container.style.backgroundColor = '#e8f5e8'; // Inline style for background
            }
            else {
                textElement.innerHTML = 'Drop files here or click to browse<br><small>JPG/PNG, max 5MB per file</small>';
                container.style.backgroundColor = 'white'; // Inline style for background
            }
        }
    };
    const handleDragOver = (e) => {
        e.preventDefault();
        e.currentTarget.style.backgroundColor = '#f0f8ff'; // Inline style for background
    };
    const handleDragLeave = (e) => {
        e.preventDefault();
        e.currentTarget.style.backgroundColor = 'white'; // Inline style for background
    };
    const handleDrop = (e, inputName) => {
        e.preventDefault();
        e.currentTarget.style.backgroundColor = '#e8f5e8'; // Inline style for background
        const files = e.dataTransfer.files;
        if (fileInputRefs.current[inputName]) {
            fileInputRefs.current[inputName].files = files;
            setFormData(prev => ({ ...prev, [inputName]: files }));
            updateFileUploadDisplay(fileInputRefs.current[inputName], inputName);
        }
    };
    const handleSubmit = (e) => {
        e.preventDefault();
        // In a real application, you would send formData to your backend
        console.log('Application data:', formData);
        alert('Thank you for your application! We\'ll review your submission and get back to you within 1-2 weeks.');
    };
    // Effect for dynamic form sections (revenue share)
    useEffect(() => {
        const trackSelectGroup = document.getElementById('preferredTrack')?.closest(`.form-group`); // Changed from styles['form-group']
        if (trackSelectGroup) {
            if (formData.revenueShareWilling === 'yes') {
                trackSelectGroup.style.display = 'block';
                document.getElementById('preferredTrack')?.setAttribute('required', 'required');
            }
            else {
                trackSelectGroup.style.display = 'none';
                document.getElementById('preferredTrack')?.removeAttribute('required');
                setFormData(prev => ({ ...prev, preferredTrack: '' })); // Clear value if hidden
            }
        }
    }, [formData.revenueShareWilling]);
    // Effect for character counters
    useEffect(() => {
        Object.entries(textAreaRefs.current).forEach(([name, textarea]) => {
            if (textarea) {
                const maxLength = parseInt(textarea.getAttribute('data-maxlength') || '1000');
                let counter = textarea.nextElementSibling;
                if (!counter || !counter.classList.contains('char-counter')) {
                    counter = document.createElement('small');
                    counter.classList.add('char-counter');
                    counter.style.display = 'block';
                    counter.style.textAlign = 'right';
                    counter.style.color = 'var(--muted-foreground)'; // Using CSS variable
                    counter.style.marginTop = '0.25rem';
                    textarea.parentNode?.insertBefore(counter, textarea.nextSibling);
                }
                const updateCounter = () => {
                    const currentLength = textarea.value.length;
                    counter.textContent = `${currentLength}/${maxLength} characters`;
                    if (currentLength > maxLength * 0.9) {
                        counter.style.color = 'var(--destructive)'; // Using CSS variable
                    }
                    else if (currentLength > maxLength * 0.7) {
                        counter.style.color = 'var(--accent)'; // Using CSS variable
                    }
                    else {
                        counter.style.color = 'var(--muted-foreground)'; // Using CSS variable
                    }
                };
                textarea.addEventListener('input', updateCounter);
                updateCounter(); // Initial update
                return () => {
                    textarea.removeEventListener('input', updateCounter);
                };
            }
        });
    }, [formData]); // Re-run if formData changes to ensure counters are updated
    // Effect for progress indicator
    useEffect(() => {
        const progressBar = document.createElement('div');
        progressBar.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: var(--border); /* Using CSS variable */
            z-index: 1000;
            transition: all 0.3s ease;
        `;
        const progressFill = document.createElement('div');
        progressFill.style.cssText = `
            height: 100%;
            background: linear-gradient(90deg, var(--primary) 0%, var(--accent) 100%); /* Using CSS variables */
            width: 0%;
            transition: width 0.3s ease;
        `;
        progressBar.appendChild(progressFill);
        document.body.prepend(progressBar);
        const updateProgress = () => {
            if (!formRef.current)
                return;
            const requiredFields = Array.from(formRef.current.querySelectorAll('[required]'));
            const filledFields = requiredFields.filter(field => {
                if (field.type === 'checkbox' || field.type === 'radio') {
                    return field.checked;
                }
                return field.value.trim() !== '';
            }).length;
            const totalRequiredFields = requiredFields.length;
            const progress = totalRequiredFields > 0 ? (filledFields / totalRequiredFields) * 100 : 0;
            progressFill.style.width = `${progress}%`;
        };
        // Attach event listeners to all form elements for progress update
        const formElements = formRef.current?.querySelectorAll('input, select, textarea');
        formElements?.forEach(field => {
            field.addEventListener('input', updateProgress);
            field.addEventListener('change', updateProgress);
        });
        updateProgress(); // Initial update
        return () => {
            progressBar.remove();
            formElements?.forEach(field => {
                field.removeEventListener('input', updateProgress);
                field.removeEventListener('change', updateProgress);
            });
        };
    }, []); // Empty dependency array means this runs once on mount and cleans up on unmount
    return (_jsxs("div", { className: "max-w-7xl mx-auto bg-card shadow-lg rounded-xl overflow-hidden my-8", children: [" ", _jsxs("div", { className: "relative p-12 text-center text-white bg-gradient-to-br from-gray-800 to-gray-900 overflow-hidden", children: [" ", _jsx("div", { className: "absolute inset-0", style: {
                            background: `url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="75" cy="75" r="1" fill="rgba(255,255,255,0.05)"/><circle cx="50" cy="10" r="0.5" fill="rgba(255,255,255,0.08)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>') repeat`,
                            opacity: 0.3
                        } }), _jsx("h1", { className: "text-4xl font-bold mb-2 relative z-10", children: "Artist Collaboration Program" }), " ", _jsx("p", { className: "text-lg opacity-90 relative z-10", children: "Shape the visual identity of the Zangar/Spandam Series" }), " "] }), _jsxs("div", { className: "p-12", children: [" ", _jsxs("div", { className: "bg-background p-8 rounded-lg mb-12 border-l-4 border-primary", children: [" ", _jsx("h2", { className: "text-2xl font-bold text-foreground mb-4", children: "Join Our Creative Vision" }), " ", _jsxs("p", { className: "text-lg mb-4", children: ["We're seeking ", _jsx("strong", { children: "1-2 talented artists" }), " to collaborate on bringing to life a world of cliffside megacities, sky-splitting space elevators, and civilizations locked in \"soft war.\" This is a unique revenue-share collaboration opportunity where your creative vision helps shape an entire series."] }), " ", _jsx("p", { className: "text-lg mb-4", children: "No upfront payment required - you'll earn meaningful percentages of book revenue with transparent reporting and fair compensation structures designed to reward your contribution over time." }), " "] }), _jsxs("div", { className: "bg-gradient-to-br from-primary to-accent text-white p-6 rounded-lg my-8", children: [" ", _jsx("h3", { className: "text-2xl font-bold mb-4", children: "What We're Looking For" }), " ", _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 my-8", children: [" ", _jsxs("div", { className: "bg-card p-6 rounded-lg border-l-4 border-primary text-foreground", children: [" ", _jsx("h4", { className: "text-xl font-semibold mb-2", children: "Cover Art" }), " ", _jsx("p", { children: "Stunning key art that captures the epic scope and Persian/Zoroastrian-influenced aesthetic of our megastructures" })] }), _jsxs("div", { className: "bg-card p-6 rounded-lg border-l-4 border-primary text-foreground", children: [_jsx("h4", { className: "text-xl font-semibold mb-2", children: "Interior Illustrations" }), _jsx("p", { children: "6-12 atmospheric pieces that enhance key scenes and world-building moments" })] }), _jsxs("div", { className: "bg-card p-6 rounded-lg border-l-4 border-primary text-foreground", children: [_jsx("h4", { className: "text-xl font-semibold mb-2", children: "World Design" }), _jsx("p", { children: "Clan sigils, glyphs, UI ornaments, and visual motifs that define our world's identity" })] }), _jsxs("div", { className: "bg-card p-6 rounded-lg border-l-4 border-primary text-foreground", children: [_jsx("h4", { className: "text-xl font-semibold mb-2", children: "Marketing Assets" }), _jsx("p", { children: "Website heroes, social banners, and promotional materials that drive engagement" })] })] })] }), _jsx("h2", { className: "text-2xl font-bold text-foreground mb-4", children: "Fair Compensation Structure" }), _jsx("p", { className: "text-lg mb-4", children: "Choose the track that works best for your situation:" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6 my-8", children: [" ", _jsxs("div", { className: "bg-card border-2 border-border rounded-lg p-6 transition-all duration-300 ease-in-out hover:-translate-y-1 hover:shadow-xl hover:border-primary", children: [" ", _jsx("h4", { className: "text-xl font-semibold text-primary mb-4", children: "Track A: Higher Percentage, Shorter Term" }), " ", _jsxs("ul", { className: "list-disc list-inside text-foreground", children: [_jsxs("li", { children: [_jsx("strong", { children: "Primary Cover:" }), " 5% net revenue for 12 months (cap: $7,500)"] }), _jsxs("li", { children: [_jsx("strong", { children: "Secondary/Marketing Art:" }), " 2.5% for 12 months (cap: $3,500)"] }), _jsxs("li", { children: [_jsx("strong", { children: "Interior Pack (6-12 images):" }), " 1.5% for 12 months (cap: $2,000)"] }), _jsxs("li", { children: [_jsx("strong", { children: "Motifs/UI Package:" }), " 1.0% for 12 months (cap: $1,200)"] })] })] }), _jsxs("div", { className: "bg-card border-2 border-border rounded-lg p-6 transition-all duration-300 ease-in-out hover:-translate-y-1 hover:shadow-xl hover:border-primary", children: [_jsx("h4", { className: "text-xl font-semibold text-primary mb-4", children: "Track B: Lower Percentage, Longer Term" }), _jsxs("ul", { className: "list-disc list-inside text-foreground", children: [_jsxs("li", { children: [_jsx("strong", { children: "Primary Cover:" }), " 3% net revenue for 24 months (cap: $7,500)"] }), _jsxs("li", { children: [_jsx("strong", { children: "Secondary/Marketing Art:" }), " 1.5% for 24 months (cap: $3,500)"] }), _jsxs("li", { children: [_jsx("strong", { children: "Interior Pack:" }), " 1.0% for 24 months (cap: $2,000)"] }), _jsxs("li", { children: [_jsx("strong", { children: "Motifs/UI:" }), " 0.75% for 24 months (cap: $1,200)"] })] })] })] }), _jsxs("div", { className: "bg-gradient-to-br from-primary to-accent text-white p-6 rounded-lg my-8", children: [" ", _jsx("h3", { className: "text-2xl font-bold mb-4", children: "Transparency & Trust" }), _jsxs("p", { className: "mb-2", children: [_jsx("strong", { children: "Quarterly financial statements" }), " with itemized revenue calculations"] }), _jsxs("p", { className: "mb-2", children: [_jsx("strong", { children: "Payment within 30 days" }), " of each quarter end"] }), _jsxs("p", { className: "mb-2", children: [_jsx("strong", { children: "Right to audit" }), " statements once per year"] }), _jsxs("p", { children: [_jsx("strong", { children: "Milestone bonuses" }), " if the book crosses $50,000 in net revenue"] })] }), _jsxs("div", { className: "bg-background p-8 rounded-lg mt-12", children: [" ", _jsx("h2", { className: "text-2xl font-bold text-foreground mb-4", children: "Application Form" }), _jsxs("form", { ref: formRef, onSubmit: handleSubmit, children: [_jsxs("div", { className: "mb-8 pb-8 border-b border-border last:border-b-0", children: [" ", _jsxs("h3", { className: "text-xl font-bold text-foreground mb-4 flex items-center", children: [_jsx("span", { className: "w-1 h-5 bg-primary mr-2.5 rounded-sm" }), "Identity & Contact"] }), " ", _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [" ", _jsxs("div", { className: "mb-4", children: [" ", _jsxs("label", { htmlFor: "fullName", className: "block mb-2 font-semibold text-muted-foreground", children: ["Full Name", _jsx("span", { className: "text-destructive", children: " *" })] }), " ", _jsx("input", { type: "text", id: "fullName", name: "fullName", required: true, value: formData.fullName, onChange: handleInputChange, className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50" }), " "] }), _jsxs("div", { className: "mb-4", children: [_jsx("label", { htmlFor: "preferredName", className: "block mb-2 font-semibold text-muted-foreground", children: "Preferred Name/Alias" }), _jsx("input", { type: "text", id: "preferredName", name: "preferredName", value: formData.preferredName, onChange: handleInputChange, className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50" })] })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "mb-4", children: [_jsxs("label", { htmlFor: "email", className: "block mb-2 font-semibold text-muted-foreground", children: ["Email", _jsx("span", { className: "text-destructive", children: " *" })] }), _jsx("input", { type: "email", id: "email", name: "email", required: true, value: formData.email, onChange: handleInputChange, className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50" })] }), _jsxs("div", { className: "mb-4", children: [_jsxs("label", { htmlFor: "timezone", className: "block mb-2 font-semibold text-muted-foreground", children: ["Time Zone", _jsx("span", { className: "text-destructive", children: " *" })] }), _jsxs("select", { id: "timezone", name: "timezone", required: true, value: formData.timezone, onChange: handleInputChange, className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50", children: [_jsx("option", { value: "", children: "Select your timezone" }), _jsx("option", { value: "UTC-12", children: "UTC-12 (Baker Island)" }), _jsx("option", { value: "UTC-11", children: "UTC-11 (Hawaii)" }), _jsx("option", { value: "UTC-10", children: "UTC-10 (Alaska)" }), _jsx("option", { value: "UTC-9", children: "UTC-9 (Pacific)" }), _jsx("option", { value: "UTC-8", children: "UTC-8 (Mountain)" }), _jsx("option", { value: "UTC-7", children: "UTC-7 (Central)" }), _jsx("option", { value: "UTC-6", children: "UTC-6 (Eastern)" }), _jsx("option", { value: "UTC-5", children: "UTC-5 (Atlantic)" }), _jsx("option", { value: "UTC+0", children: "UTC+0 (London)" }), _jsx("option", { value: "UTC+1", children: "UTC+1 (Central Europe)" }), _jsx("option", { value: "UTC+2", children: "UTC+2 (Eastern Europe)" }), _jsx("option", { value: "UTC+8", children: "UTC+8 (China/Singapore)" }), _jsx("option", { value: "UTC+9", children: "UTC+9 (Japan)" })] })] })] }), _jsxs("div", { className: "mb-4", children: [_jsxs("label", { htmlFor: "country", className: "block mb-2 font-semibold text-muted-foreground", children: ["Country", _jsx("span", { className: "text-destructive", children: " *" })] }), _jsx("input", { type: "text", id: "country", name: "country", required: true, value: formData.country, onChange: handleInputChange, className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50" })] }), _jsxs("div", { className: "mb-4", children: [_jsxs("label", { htmlFor: "portfolioLinks", className: "block mb-2 font-semibold text-muted-foreground", children: ["Portfolio Links", _jsx("span", { className: "text-destructive", children: " *" })] }), _jsx("textarea", { id: "portfolioLinks", name: "portfolioLinks", placeholder: "Please provide links to your portfolio (ArtStation, Behance, personal website, Instagram, etc.)", required: true, value: formData.portfolioLinks, onChange: handleInputChange, ref: el => { textAreaRefs.current['portfolioLinks'] = el; }, "data-maxlength": "500", className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50 resize-y min-h-[100px]" })] })] }), _jsxs("div", { className: "mb-8 pb-8 border-b border-border last:border-b-0", children: [_jsxs("h3", { className: "text-xl font-bold text-foreground mb-4 flex items-center", children: [_jsx("span", { className: "w-1 h-5 bg-primary mr-2.5 rounded-sm" }), "Art Focus & Availability"] }), _jsxs("div", { className: "mb-4", children: [_jsx("label", { className: "block mb-2 font-semibold text-muted-foreground", children: "Primary Specialties (check all that apply)" }), _jsxs("div", { className: "grid grid-cols-1 sm:grid-cols-2 gap-2 mt-2", children: [" ", _jsxs("div", { className: "flex items-center", children: [" ", _jsx("input", { type: "checkbox", id: "coverIll", name: "specialties", value: "cover-illustration", onChange: handleInputChange, checked: formData.specialties.includes('cover-illustration'), className: "w-auto mr-2" }), " ", _jsx("label", { htmlFor: "coverIll", children: "Cover Illustration" })] }), _jsxs("div", { className: "flex items-center", children: [_jsx("input", { type: "checkbox", id: "charDesign", name: "specialties", value: "character-design", onChange: handleInputChange, checked: formData.specialties.includes('character-design'), className: "w-auto mr-2" }), _jsx("label", { htmlFor: "charDesign", children: "Character Design" })] }), _jsxs("div", { className: "flex items-center", children: [_jsx("input", { type: "checkbox", id: "environment", name: "specialties", value: "environment", onChange: handleInputChange, checked: formData.specialties.includes('environment'), className: "w-auto mr-2" }), _jsx("label", { htmlFor: "environment", children: "Environment Art" })] }), _jsxs("div", { className: "flex items-center", children: [_jsx("input", { type: "checkbox", id: "uiMotifs", name: "specialties", value: "ui-motifs", onChange: handleInputChange, checked: formData.specialties.includes('ui-motifs'), className: "w-auto mr-2" }), _jsx("label", { htmlFor: "uiMotifs", children: "UI/Sigil Design" })] }), _jsxs("div", { className: "flex items-center", children: [_jsx("input", { type: "checkbox", id: "typography", name: "specialties", value: "typography", onChange: handleInputChange, checked: formData.specialties.includes('typography'), className: "w-auto mr-2" }), _jsx("label", { htmlFor: "typography", children: "Typography" })] }), _jsxs("div", { className: "flex items-center", children: [_jsx("input", { type: "checkbox", id: "marketing", name: "specialties", value: "marketing", onChange: handleInputChange, checked: formData.specialties.includes('marketing'), className: "w-auto mr-2" }), _jsx("label", { htmlFor: "marketing", children: "Marketing Visuals" })] })] })] }), _jsxs("div", { className: "mb-4", children: [_jsx("label", { className: "block mb-2 font-semibold text-muted-foreground", children: "Tools/Software (check all that apply)" }), _jsxs("div", { className: "grid grid-cols-1 sm:grid-cols-2 gap-2 mt-2", children: [_jsxs("div", { className: "flex items-center", children: [_jsx("input", { type: "checkbox", id: "photoshop", name: "tools", value: "photoshop", onChange: handleInputChange, checked: formData.tools.includes('photoshop'), className: "w-auto mr-2" }), _jsx("label", { htmlFor: "photoshop", children: "Photoshop" })] }), _jsxs("div", { className: "flex items-center", children: [_jsx("input", { type: "checkbox", id: "procreate", name: "tools", value: "procreate", onChange: handleInputChange, checked: formData.tools.includes('procreate'), className: "w-auto mr-2" }), _jsx("label", { htmlFor: "procreate", children: "Procreate" })] }), _jsxs("div", { className: "flex items-center", children: [_jsx("input", { type: "checkbox", id: "clipstudio", name: "tools", value: "clip-studio", onChange: handleInputChange, checked: formData.tools.includes('clip-studio'), className: "w-auto mr-2" }), _jsx("label", { htmlFor: "clipstudio", children: "Clip Studio" })] }), _jsxs("div", { className: "flex items-center", children: [_jsx("input", { type: "checkbox", id: "blender", name: "tools", value: "blender", onChange: handleInputChange, checked: formData.tools.includes('blender'), className: "w-auto mr-2" }), _jsx("label", { htmlFor: "blender", children: "Blender" })] }), _jsxs("div", { className: "flex items-center", children: [_jsx("input", { type: "checkbox", id: "illustrator", name: "tools", value: "illustrator", onChange: handleInputChange, checked: formData.tools.includes('illustrator'), className: "w-auto mr-2" }), _jsx("label", { htmlFor: "illustrator", children: "Illustrator" })] }), _jsxs("div", { className: "flex items-center", children: [_jsx("input", { type: "checkbox", id: "other", name: "tools", value: "other", onChange: handleInputChange, checked: formData.tools.includes('other'), className: "w-auto mr-2" }), _jsx("label", { htmlFor: "other", children: "Other" })] })] })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "mb-4", children: [_jsxs("label", { htmlFor: "availability", className: "block mb-2 font-semibold text-muted-foreground", children: ["Weekly Availability", _jsx("span", { className: "text-destructive", children: " *" })] }), _jsxs("select", { id: "availability", name: "availability", required: true, value: formData.availability, onChange: handleInputChange, className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50", children: [_jsx("option", { value: "", children: "Select availability" }), _jsx("option", { value: "10-15", children: "10-15 hours/week" }), _jsx("option", { value: "15-25", children: "15-25 hours/week" }), _jsx("option", { value: "25+", children: "25+ hours/week" }), _jsx("option", { value: "project-sprints", children: "Project-only sprints" })] })] }), _jsxs("div", { className: "mb-4", children: [_jsxs("label", { htmlFor: "startDate", className: "block mb-2 font-semibold text-muted-foreground", children: ["Earliest Start Date", _jsx("span", { className: "text-destructive", children: " *" })] }), _jsx("input", { type: "date", id: "startDate", name: "startDate", required: true, value: formData.startDate, onChange: handleInputChange, className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50" })] })] }), _jsxs("div", { className: "mb-4", children: [_jsx("label", { htmlFor: "commitment", className: "block mb-2 font-semibold text-muted-foreground", children: "Time Commitment Window" }), _jsx("input", { type: "text", id: "commitment", name: "commitment", placeholder: "e.g., 'I can commit for 3 months' or 'Available through Q2 2025'", value: formData.commitment, onChange: handleInputChange, className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50" })] })] }), _jsxs("div", { className: "mb-8 pb-8 border-b border-border last:border-b-0", children: [_jsxs("h3", { className: "text-xl font-bold text-foreground mb-4 flex items-center", children: [_jsx("span", { className: "w-1 h-5 bg-primary mr-2.5 rounded-sm" }), "Portfolio & Samples"] }), _jsxs("div", { className: "mb-4", children: [_jsx("label", { htmlFor: "portfolioUpload", className: "block mb-2 font-semibold text-muted-foreground", children: "Portfolio Upload (3-6 images, optional)" }), _jsxs("div", { className: "file-upload border-2 border-dashed border-primary rounded-lg p-8 text-center bg-card transition-colors duration-300 ease-in-out hover:bg-blue-50", onDragOver: handleDragOver, onDragLeave: handleDragLeave, onDrop: (e) => handleDrop(e, 'portfolioUpload'), children: [" ", _jsx("input", { type: "file", id: "portfolioUpload", name: "portfolioUpload", multiple: true, accept: "image/*", onChange: (e) => handleFileChange(e, 'portfolioUpload'), ref: el => { fileInputRefs.current['portfolioUpload'] = el; }, className: "hidden" }), " ", _jsxs("p", { className: "text-muted-foreground", children: ["Drop files here or ", _jsx("span", { className: "text-primary cursor-pointer", onClick: () => fileInputRefs.current['portfolioUpload']?.click(), children: "click to browse" }), _jsx("br", {}), _jsx("small", { children: "JPG/PNG, max 5MB per file" })] })] })] }), _jsxs("div", { className: "mb-4", children: [_jsxs("label", { htmlFor: "bestPieces", className: "block mb-2 font-semibold text-muted-foreground", children: ["Direct Links to 3-5 Best Pieces", _jsx("span", { className: "text-destructive", children: " *" })] }), _jsx("textarea", { id: "bestPieces", name: "bestPieces", placeholder: "Please provide direct links to your best work that showcases your style and skill", required: true, value: formData.bestPieces, onChange: handleInputChange, ref: el => { textAreaRefs.current['bestPieces'] = el; }, "data-maxlength": "500", className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50 resize-y min-h-[100px]" })] }), _jsxs("div", { className: "mb-4", children: [_jsx("label", { htmlFor: "customSample", className: "block mb-2 font-semibold text-muted-foreground", children: "Custom Sample for This Project (optional)" }), _jsxs("div", { className: "file-upload border-2 border-dashed border-primary rounded-lg p-8 text-center bg-card transition-colors duration-300 ease-in-out hover:bg-blue-50", children: [_jsx("input", { type: "file", id: "customSample", name: "customSample", accept: "image/*", onChange: (e) => handleFileChange(e, 'customSample'), ref: el => { fileInputRefs.current['customSample'] = el; }, className: "hidden" }), _jsxs("p", { className: "text-muted-foreground", children: ["Upload a custom piece based on our world concept", _jsx("br", {}), _jsx("small", { children: "Not required but highly encouraged" })] })] })] }), _jsxs("div", { className: "mb-4", children: [_jsx("label", { htmlFor: "makingOfNotes", className: "block mb-2 font-semibold text-muted-foreground", children: "Brief Making-of Notes (optional)" }), _jsx("textarea", { id: "makingOfNotes", name: "makingOfNotes", placeholder: "Describe your approach, tools, or references used (50-150 words)", value: formData.makingOfNotes, onChange: handleInputChange, ref: el => { textAreaRefs.current['makingOfNotes'] = el; }, "data-maxlength": "150", className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50 resize-y min-h-[100px]" })] })] }), _jsxs("div", { className: "mb-8 pb-8 border-b border-border last:border-b-0", children: [_jsxs("h3", { className: "text-xl font-bold text-foreground mb-4 flex items-center", children: [_jsx("span", { className: "w-1 h-5 bg-primary mr-2.5 rounded-sm" }), "Style & Fit Questions"] }), _jsxs("div", { className: "mb-4", children: [_jsxs("label", { htmlFor: "visualInfluences", className: "block mb-2 font-semibold text-muted-foreground", children: ["Visual Influences for This Project", _jsx("span", { className: "text-destructive", children: " *" })] }), _jsx("textarea", { id: "visualInfluences", name: "visualInfluences", placeholder: "What visual influences, artists, or styles do you think overlap with this Persian/Zoroastrian-influenced sci-fi world? (100-200 words)", required: true, value: formData.visualInfluences, onChange: handleInputChange, ref: el => { textAreaRefs.current['visualInfluences'] = el; }, "data-maxlength": "200", className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50 resize-y min-h-[100px]" })] }), _jsxs("div", { className: "mb-4", children: [_jsxs("label", { htmlFor: "worldVisualization", className: "block mb-2 font-semibold text-muted-foreground", children: ["World Visualization", _jsx("span", { className: "text-destructive", children: " *" })] }), _jsx("textarea", { id: "worldVisualization", name: "worldVisualization", placeholder: "Describe how you'd visualize: cliffside megacity V\u0259n\u0101s\u014D, space elevator, 'soft war' sky, oath-bound warrior (Hooran) (150-250 words)", required: true, value: formData.worldVisualization, onChange: handleInputChange, ref: el => { textAreaRefs.current['worldVisualization'] = el; }, "data-maxlength": "250", className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50 resize-y min-h-[100px]" })] }), _jsxs("div", { className: "mb-4", children: [_jsxs("label", { htmlFor: "feedbackProcess", className: "block mb-2 font-semibold text-muted-foreground", children: ["Feedback & Revision Process", _jsx("span", { className: "text-destructive", children: " *" })] }), _jsx("textarea", { id: "feedbackProcess", name: "feedbackProcess", placeholder: "How do you handle feedback and revisions? What's your typical process? (100-200 words)", required: true, value: formData.feedbackProcess, onChange: handleInputChange, ref: el => { textAreaRefs.current['feedbackProcess'] = el; }, "data-maxlength": "200", className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50 resize-y min-h-[100px]" })] }), _jsxs("div", { className: "mb-4", children: [_jsx("label", { htmlFor: "colorGrading", className: "block mb-2 font-semibold text-muted-foreground", children: "Preferred Color Grading" }), _jsx("input", { type: "text", id: "colorGrading", name: "colorGrading", placeholder: "e.g., 'Cool teals/slates with warm amber accents' or 'Muted earth tones with electric blues'", value: formData.colorGrading, onChange: handleInputChange, className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50" })] })] }), _jsxs("div", { className: "mb-8 pb-8 border-b border-border last:border-b-0", children: [_jsxs("h3", { className: "text-xl font-bold text-foreground mb-4 flex items-center", children: [_jsx("span", { className: "w-1 h-5 bg-primary mr-2.5 rounded-sm" }), "Process & Reliability"] }), _jsxs("div", { className: "mb-4", children: [_jsx("label", { htmlFor: "references", className: "block mb-2 font-semibold text-muted-foreground", children: "Past Client References or Shipped Work" }), _jsx("textarea", { id: "references", name: "references", placeholder: "Links to published work, client testimonials, or references (optional)", value: formData.references, onChange: handleInputChange, ref: el => { textAreaRefs.current['references'] = el; }, "data-maxlength": "500", className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50 resize-y min-h-[100px]" })] }), _jsxs("div", { className: "mb-4", children: [_jsxs("label", { htmlFor: "turnaround", className: "block mb-2 font-semibold text-muted-foreground", children: ["Typical Turnaround for Single Finished Piece", _jsx("span", { className: "text-destructive", children: " *" })] }), _jsxs("select", { id: "turnaround", name: "turnaround", required: true, value: formData.turnaround, onChange: handleInputChange, className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50", children: [_jsx("option", { value: "", children: "Select timeframe" }), _jsx("option", { value: "3-5-days", children: "3-5 days" }), _jsx("option", { value: "1-2-weeks", children: "1-2 weeks" }), _jsx("option", { value: "2-4-weeks", children: "2-4 weeks" }), _jsx("option", { value: ">4-weeks", children: "More than 4 weeks" })] })] }), _jsxs("div", { className: "mb-4", children: [_jsxs("label", { htmlFor: "revisionPolicy", className: "block mb-2 font-semibold text-muted-foreground", children: ["Revision Policy", _jsx("span", { className: "text-destructive", children: " *" })] }), _jsx("input", { type: "text", id: "revisionPolicy", name: "revisionPolicy", placeholder: "e.g., '2 rounds of revisions included, additional rounds at hourly rate'", required: true, value: formData.revisionPolicy, onChange: handleInputChange, className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50" })] })] }), _jsxs("div", { className: "mb-8 pb-8 border-b border-border last:border-b-0", children: [_jsxs("h3", { className: "text-xl font-bold text-foreground mb-4 flex items-center", children: [_jsx("span", { className: "w-1 h-5 bg-primary mr-2.5 rounded-sm" }), "Compensation Preferences"] }), _jsx("div", { className: "mb-4", children: _jsxs("label", { className: "block mb-2 font-semibold text-muted-foreground", children: [_jsx("input", { type: "radio", name: "revenueShareWilling", value: "yes", required: true, onChange: handleInputChange, checked: formData.revenueShareWilling === 'yes', className: "w-auto mr-2" }), "Yes, I'm willing to work for revenue share until sales begin"] }) }), _jsx("div", { className: "mb-4", children: _jsxs("label", { className: "block mb-2 font-semibold text-muted-foreground", children: [_jsx("input", { type: "radio", name: "revenueShareWilling", value: "no", required: true, onChange: handleInputChange, checked: formData.revenueShareWilling === 'no', className: "w-auto mr-2" }), "No, I prefer upfront payment"] }) }), _jsxs("div", { className: "mb-4", children: [_jsx("label", { htmlFor: "preferredTrack", className: "block mb-2 font-semibold text-muted-foreground", children: "If yes to revenue share, preferred track:" }), _jsxs("select", { id: "preferredTrack", name: "preferredTrack", value: formData.preferredTrack, onChange: handleInputChange, className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50", children: [_jsx("option", { value: "", children: "Select preferred track" }), _jsx("option", { value: "track-a", children: "Track A: Higher percentage, 12 months" }), _jsx("option", { value: "track-b", children: "Track B: Lower percentage, 24 months" }), _jsx("option", { value: "flexible", children: "Flexible/Open to discussion" })] })] }), _jsxs("div", { className: "mb-4", children: [_jsx("label", { htmlFor: "taxConstraints", className: "block mb-2 font-semibold text-muted-foreground", children: "Tax or Invoicing Constraints" }), _jsx("input", { type: "text", id: "taxConstraints", name: "taxConstraints", placeholder: "Any specific requirements for your country/region? (optional)", value: formData.taxConstraints, onChange: handleInputChange, className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50" })] })] }), _jsxs("div", { className: "mb-8 pb-8 border-b border-border last:border-b-0", children: [_jsxs("h3", { className: "text-xl font-bold text-foreground mb-4 flex items-center", children: [_jsx("span", { className: "w-1 h-5 bg-primary mr-2.5 rounded-sm" }), "Legal & Agreements"] }), _jsx("div", { className: "mb-4", children: _jsxs("label", { className: "block mb-2 font-semibold text-muted-foreground", children: [_jsx("input", { type: "checkbox", name: "projectPortal", required: true, onChange: handleInputChange, checked: formData.projectPortal, className: "w-auto mr-2" }), "I consent to using the project portal/workflow system"] }) }), _jsx("div", { className: "mb-4", children: _jsxs("label", { className: "block mb-2 font-semibold text-muted-foreground", children: [_jsx("input", { type: "checkbox", name: "ndaAcceptance", required: true, onChange: handleInputChange, checked: formData.ndaAcceptance, className: "w-auto mr-2" }), "I accept NDA/Confidentiality requirements"] }) }), _jsx("div", { className: "mb-4", children: _jsxs("label", { className: "block mb-2 font-semibold text-muted-foreground", children: [_jsx("input", { type: "checkbox", name: "originalityConfirm", required: true, onChange: handleInputChange, checked: formData.originalityConfirm, className: "w-auto mr-2" }), "I confirm originality of my work and ability to grant licensing rights"] }) }), _jsx("div", { className: "mb-4", children: _jsxs("label", { className: "block mb-2 font-semibold text-muted-foreground", children: [_jsx("input", { type: "checkbox", name: "rightsConfirm", required: true, onChange: handleInputChange, checked: formData.rightsConfirm, className: "w-auto mr-2" }), "I confirm my ability to grant project-specific rights as outlined"] }) }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "mb-4", children: [_jsxs("label", { htmlFor: "signature", className: "block mb-2 font-semibold text-muted-foreground", children: ["Digital Signature", _jsx("span", { className: "text-destructive", children: " *" })] }), _jsx("input", { type: "text", id: "signature", name: "signature", placeholder: "Type your full name", required: true, value: formData.signature, onChange: handleInputChange, className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50" })] }), _jsxs("div", { className: "mb-4", children: [_jsxs("label", { htmlFor: "signatureDate", className: "block mb-2 font-semibold text-muted-foreground", children: ["Date", _jsx("span", { className: "text-destructive", children: " *" })] }), _jsx("input", { type: "date", id: "signatureDate", name: "signatureDate", required: true, value: formData.signatureDate, onChange: handleInputChange, className: "w-full p-3 border-2 border-input rounded-md text-base transition-colors duration-300 ease-in-out focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/50" })] })] })] }), _jsx("button", { type: "submit", className: "w-full py-4 px-8 bg-gradient-to-br from-primary to-accent text-white font-semibold text-lg rounded-lg border-none cursor-pointer transition-all duration-300 ease-in-out mt-8 hover:-translate-y-0.5 hover:shadow-lg hover:shadow-primary/50", children: "Apply to Collaborate" }), " "] })] })] })] }));
};
export default ArtistCollaborationPage;
//# sourceMappingURL=ArtistCollaborationPage.js.map